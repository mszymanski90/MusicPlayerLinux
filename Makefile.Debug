#############################################################################
# Makefile for building: MusicPlayerLinux
# Generated by qmake (2.01a) (Qt 4.8.1) on: So 19. lip 10:26:46 2014
# Project:  MusicPlayerLinux.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -std=gnu++0x -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\include\QtCore" -I"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\include\QtGui" -I"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\include" -I"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\include\ActiveQt" -I"debug" -I"." -I"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -mthreads -Wl,-subsystem,windows
LIBS        =        -L"c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\lib" -lmingw32 -lqtmaind D:/Dropbox/projects/MusicPlayerLinux/bass.lib -lQtGuid4 -lQtCored4 
QMAKE         = c:\programs\qt\qtsdk\desktop\qt\4.8.1\mingw\bin\qmake.exe
IDC           = c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		mainapplication.cpp \
		mplcore.cpp \
		loggerdevice.cpp \
		mpl_abstractstate.cpp \
		mpl_stateplayback.cpp \
		mpl_stateidle.cpp \
		mpl_statepaused.cpp \
		mpl_bassdevice.cpp debug\moc_mainwindow.cpp \
		debug\moc_mainapplication.cpp \
		debug\moc_loggerdevice.cpp
OBJECTS       = debug/main.o \
		debug/mainwindow.o \
		debug/mainapplication.o \
		debug/mplcore.o \
		debug/loggerdevice.o \
		debug/mpl_abstractstate.o \
		debug/mpl_stateplayback.o \
		debug/mpl_stateidle.o \
		debug/mpl_statepaused.o \
		debug/mpl_bassdevice.o \
		debug/moc_mainwindow.o \
		debug/moc_mainapplication.o \
		debug/moc_loggerdevice.o
DIST          = 
QMAKE_TARGET  = MusicPlayerLinux
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = MusicPlayerLinux.exe
DESTDIR_TARGET = debug\MusicPlayerLinux.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.MusicPlayerLinux.Debug  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++ CONFIG+=release -o Makefile.Debug MusicPlayerLinux.pro

dist:
	$(ZIP) MusicPlayerLinux.zip $(SOURCES) $(DIST) MusicPlayerLinux.pro c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\qconfig.pri c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\modules\qt_webkit_version.pri c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_functions.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_config.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\exclusive_builds.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_pre.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_pre.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\debug.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\debug_and_release.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_post.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_post.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\build_pass.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\rtti.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\exceptions.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\stl.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\shared.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\warn_on.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\thread.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\moc.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\windows.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\resources.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\uic.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\yacc.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\lex.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\include_source_dir.prf c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\lib\qtmaind.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\main.o debug\mainwindow.o debug\mainapplication.o debug\mplcore.o debug\loggerdevice.o debug\mpl_abstractstate.o debug\mpl_stateplayback.o debug\mpl_stateidle.o debug\mpl_statepaused.o debug\mpl_bassdevice.o debug\moc_mainwindow.o debug\moc_mainapplication.o debug\moc_loggerdevice.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_mainwindow.cpp debug/moc_mainapplication.cpp debug/moc_loggerdevice.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_mainwindow.cpp debug\moc_mainapplication.cpp debug\moc_loggerdevice.cpp
debug/moc_mainwindow.cpp: mainwindow.h
	C:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o debug\moc_mainwindow.cpp

debug/moc_mainapplication.cpp: mainwindow.h \
		mplcore.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_stateplayback.h \
		mpl_statepaused.h \
		loggerdevice.h \
		mainapplication.h
	C:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainapplication.h -o debug\moc_mainapplication.cpp

debug/moc_loggerdevice.cpp: loggerdevice.h
	C:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 loggerdevice.h -o debug\moc_loggerdevice.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	c:\Programs\Qt\QtSDK\Desktop\Qt\4.8.1\mingw\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

debug/main.o: main.cpp mainapplication.h \
		mainwindow.h \
		mplcore.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_stateplayback.h \
		mpl_statepaused.h \
		loggerdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\main.o main.cpp

debug/mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mainwindow.o mainwindow.cpp

debug/mainapplication.o: mainapplication.cpp mainapplication.h \
		mainwindow.h \
		mplcore.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_stateplayback.h \
		mpl_statepaused.h \
		loggerdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mainapplication.o mainapplication.cpp

debug/mplcore.o: mplcore.cpp mplcore.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_stateplayback.h \
		mpl_statepaused.h \
		loggerdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mplcore.o mplcore.cpp

debug/loggerdevice.o: loggerdevice.cpp loggerdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\loggerdevice.o loggerdevice.cpp

debug/mpl_abstractstate.o: mpl_abstractstate.cpp mpl_abstractstate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mpl_abstractstate.o mpl_abstractstate.cpp

debug/mpl_stateplayback.o: mpl_stateplayback.cpp mpl_stateplayback.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_statepaused.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mpl_stateplayback.o mpl_stateplayback.cpp

debug/mpl_stateidle.o: mpl_stateidle.cpp mpl_stateidle.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateplayback.h \
		mpl_statepaused.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mpl_stateidle.o mpl_stateidle.cpp

debug/mpl_statepaused.o: mpl_statepaused.cpp mpl_statepaused.h \
		mpl_abstractstate.h \
		mpl_bassdevice.h \
		bass.h \
		mpl_stateidle.h \
		mpl_stateplayback.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mpl_statepaused.o mpl_statepaused.cpp

debug/mpl_bassdevice.o: mpl_bassdevice.cpp mpl_bassdevice.h \
		bass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mpl_bassdevice.o mpl_bassdevice.cpp

debug/moc_mainwindow.o: debug/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_mainwindow.o debug\moc_mainwindow.cpp

debug/moc_mainapplication.o: debug/moc_mainapplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_mainapplication.o debug\moc_mainapplication.cpp

debug/moc_loggerdevice.o: debug/moc_loggerdevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_loggerdevice.o debug\moc_loggerdevice.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

